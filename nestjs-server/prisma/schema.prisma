generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  name     String @default("Не указано")
  email    String @unique
  phone    String @unique
  password String

  role Role @default(USER)

  stations Station[]

  expense Expense[]

  @@map("user")
}

model Station {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  name    String
  address String

  products   Product[]
  categories Category[]
  employee   Employee[]
  sale       Sale[]
  expense    Expense[]

  user   User?   @relation(fields: [userId], references: [id])
  userId String? @map("user_id")

  @@map("station")
}

model Sale {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  date     String
  pointer  Int
  quantity Int
  price    Int
  total    Int

  products Product[]

  station   Station? @relation(fields: [stationId], references: [id])
  stationId String?  @map("station_id")

  @@map("sale")
}

model Expense {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  date        String
  price       Int
  description String?

  category   Category? @relation(fields: [categoryId], references: [id])
  categoryId String?   @map("category_id")

  station   Station? @relation(fields: [stationId], references: [id])
  stationId String?  @map("station_id")

  employee   Employee? @relation(fields: [employeeId], references: [id])
  employeeId String?

  user   User?   @relation(fields: [userId], references: [id])
  userId String?

  @@map("expense")
}

model Product {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  title String

  station   Station? @relation(fields: [stationId], references: [id])
  stationId String?  @map("station_id")

  sale   Sale?   @relation(fields: [saleId], references: [id])
  saleId String?

  @@map("product")
}

model Employee {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  name     String
  position Position
  phone    String?

  station   Station? @relation(fields: [stationId], references: [id])
  stationId String?  @map("station_id")

  expenses Expense[]

  @@map("employee")
}

model Category {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  title String

  expense Expense[]

  station   Station? @relation(fields: [stationId], references: [id])
  stationId String?  @map("station_id")

  @@map("category")
}

enum Role {
  USER
  ADMIN
  ACCOUNTANT
}

enum Position {
  MANAGER
  OPERATOR
  WORKER
}
